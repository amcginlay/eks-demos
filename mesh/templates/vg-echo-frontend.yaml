apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualGateway
metadata:
  name: vg-echo-frontend
spec:
  namespaceSelector:
    matchLabels:
      mesh: {{ .Release.Namespace }}
  gatewayRouteSelector:
    matchLabels:
      gateway: vg-echo-frontend
  podSelector:
    matchLabels:
      app: gw-echo-frontend
  listeners:
    - portMapping:
        port: 80
        protocol: http
---
# apiVersion: appmesh.k8s.aws/v1beta2
# kind: GatewayRoute
# metadata:
#   name: vgr-echo-frontend
#   labels:
#     gateway: vg-echo-frontend
# spec:
#   httpRoute:
#     match:
#       prefix: "/"
#     action:
#       target:
#         virtualService:
#           virtualServiceRef:
#             name: vs-echo-frontend
# ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gw-echo-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gw-echo-frontend
  template:
    metadata:
      labels:
        app: gw-echo-frontend
    spec:
      containers:
        - name: envoy
          image: 840364872350.dkr.ecr.us-west-2.amazonaws.com/aws-appmesh-envoy:v1.20.0.1-prod
          ports:
            - containerPort: 80
          volumeMounts:
           - mountPath: "/etc/keys"
             name: pca-secret
             readOnly: true
      volumes:
        - name: pca-secret
          secret:
            secretName: pca-secret
---
apiVersion: v1
kind: Service
metadata:
  name: gw-echo-frontend
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
spec:
  type: LoadBalancer
  ports:
    - port: 80
  selector:
    app: gw-echo-frontend